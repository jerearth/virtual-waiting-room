@implements IDisposable
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <nav class="flex flex-col space-y-8 pt-10 px-4">
            <NavLink class="text-contrast font-normal w-full hover:bg-contrast hover:text-white px-2 py-2 rounded-xl text-lg" href="" Match="NavLinkMatch.All">
                <i class="fi fi-rr-home"></i>&nbsp;&nbsp;Home
            </NavLink>
            <NavLink class="text-contrast font-normal w-full hover:bg-contrast hover:text-white px-2 py-2 rounded-xl text-lg" href="search">
                <i class="fi fi-rr-search"></i>&nbsp;&nbsp;Search
            </NavLink>
            <NavLink class="text-contrast font-normal w-full hover:bg-contrast hover:text-white px-2 py-2 rounded-xl text-lg" href="create">
                <i class="fi fi-rr-apps-add"></i>&nbsp;&nbsp;Create
            </NavLink>
            <NavLink class="text-contrast font-normal w-full hover:bg-contrast hover:text-white px-2 py-2 rounded-xl text-lg" href="items">
                <i class="fi fi-rr-list"></i>&nbsp;&nbsp;Items
            </NavLink>
            <NavLink class="text-contrast font-normal w-full hover:bg-contrast hover:text-white px-2 py-2 rounded-xl text-lg" href="settings">
                <i class="fi fi-rr-settings"></i>&nbsp;&nbsp;@context.User.Identity?.Name
            </NavLink>
            <form action="account/logout" method="post" class="w-full">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button type="submit" class="text-contrast font-normal w-full hover:bg-contrast hover:text-white px-2 py-2 rounded-xl text-lg text-left">
                    <i class="fi fi-rr-sign-out-alt"></i>&nbsp;&nbsp;Logout
                </button>
            </form>
        </nav>
    </Authorized>
</AuthorizeView>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
