@page "/account/register-confirmation"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities

@inject UserManager<User> UserManager
@inject IEmailSender<User> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Register confirmation</PageTitle>

<h1>Register confirmation</h1>

<StatusMessage Message="@statusMessage" />

@if (!isEmailConfirmed)
{
    <p>Your email is not confirmed. Please check your inbox for a confirmation link.</p>
    <a href="account/resend-email-confirmation">Resend email confirmation</a>
}
else
{
    <p>Your email is already confirmed. You can proceed to login.</p>
    <button class="btn btn-primary" onclick="location.href='/account/login'">Proceed to Login</button>
}

@code {
    private string? emailConfirmationLink;
    private string? statusMessage;
    private bool isEmailConfirmed = false;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Error finding user for unspecified email";
        }
        else
        {
            isEmailConfirmed = await UserManager.IsEmailConfirmedAsync(user);

            if (!isEmailConfirmed)
            {
                statusMessage = "Your email is not confirmed. Please check your inbox for a confirmation link.";

            }
            else
            {
                statusMessage = "Your email is already confirmed. You can proceed to login.";
            }
        }
    }
}

